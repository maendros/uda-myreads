{"version":3,"sources":["BooksAPI.js","Book.js","SearchBook.js","BookShelf.js","ListBooks.js","App.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","update","book","shelf","fetch","concat","id","method","Object","objectSpread","Content-Type","body","JSON","stringify","then","res","json","search","query","data","books","Book","change_bookShelf","e","_this","props","onUpdate","target","value","console","log","this","react_default","a","createElement","className","style","width","height","backgroundImage","imageLinks","thumbnail","onChange","disabled","title","authors","React","Component","SearchBook","update_book","moveTo","searchBooks","_this2","Link","to","type","placeholder","event","handleSearchBook","onKeyDown","keyCode","length","map","index","src_Book","key","BookShelf","shelfTitle","ListBooks","wantToRead","filter","shelfBook","currentlyReading","read","src_BookShelf","BooksApp","state","bookUi","shelfUi","searchBookChoice","push","BooksAPI","nextBookState","setState","clearBooks","records","error","undefined","match","RegExp","escapeRegExp","record","test","author","catch","err","_this3","Route","path","render","_ref","history","src_SearchBook","exact","src_ListBooks","ReactDOM","HashRouter","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.c19f31fb.chunk.js","sourcesContent":["\nconst api = \"https://reactnd-books-api.udacity.com\"\n\n\n// Generate a unique token for storing your bookshelf data on the backend server.\nlet token = localStorage.token\nif (!token)\n  token = localStorage.token = Math.random().toString(36).substr(-8)\n\nconst headers = {\n  'Accept': 'application/json',\n  'Authorization': token\n}\n\nexport const get = (bookId) =>\n  fetch(`${api}/books/${bookId}`, { headers })\n    .then(res => res.json())\n    .then(data => data.book)\n\nexport const getAll = () =>\n  fetch(`${api}/books`, { headers })\n    .then(res => res.json())\n    .then(data => data.books)\n\nexport const update = (book, shelf) =>\n  fetch(`${api}/books/${book.id}`, {\n    method: 'PUT',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ shelf })\n  }).then(res => res.json())\n\nexport const search = (query) =>\n  fetch(`${api}/search`, {\n    method: 'POST',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ query })\n  }).then(res => res.json())\n    .then(data => data.books)\n","import React from \"react\";\r\n\r\nimport PropTypes from \"prop-types\";\r\n//import BookShelfChanger from \"./BookShelfChanger\";\r\n\r\n//import sortBy from \"sort-by\";\r\n\r\n\r\nclass Book extends React.Component {\r\n  static propTypes = {\r\n    book: PropTypes.object.isRequired,\r\n    onUpdate: PropTypes.func.isRequired\r\n  };\r\n\r\n\r\n\r\n  change_bookShelf = (e) => {\r\n    this.props.onUpdate(e.target.value);\r\n    console.log(this.props);\r\n  }\r\n\r\n\r\n  render() {\r\n    const { book } = this.props;\r\n\r\n\r\n    return (\r\n      <div>\r\n        <li>\r\n          <div className=\"book\">\r\n            <div className=\"book-top\">\r\n              <div\r\n                className=\"book-cover\"\r\n                style={{\r\n                  width: 128,\r\n                  height: 193,\r\n                  backgroundImage: `url(${book.imageLinks? book.imageLinks.thumbnail :'' })`\r\n                }}\r\n              />\r\n              <div className=\"book-shelf-changer\">\r\n                <select  onChange={this.change_bookShelf} value={book.shelf}>\r\n                  <option value=\"move\" disabled>\r\n                    Move to...\r\n                  </option>\r\n                  <option value=\"currentlyReading\">Currently Reading</option>\r\n                  <option value=\"wantToRead\">Want to Read</option>\r\n                  <option value=\"read\">Read</option>\r\n                  <option value=\"none\">None</option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n            <div className=\"book-title\">{book.title}</div>\r\n            <div className=\"book-authors\">{book.authors? book.authors[0] :'' }</div>\r\n          </div>\r\n        </li>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Book;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport Book from \"./Book\";\r\nimport { PropTypes } from \"prop-types\";\r\n\r\nclass SearchBook extends React.Component {\r\n  static propTypes = {\r\n    books: PropTypes.array.isRequired,\r\n    moveTo: PropTypes.func.isRequired,\r\n    searchBooks: PropTypes.func.isRequired\r\n  };\r\n  componentDidMount() {}\r\n  handleSearchBook(query) {\r\n    if (this.props.searchBooks) {\r\n      this.props.searchBooks(query);\r\n    }\r\n  }\r\n  update_book = (book, shelf) => {\r\n    this.props.moveTo(book, shelf, true);\r\n  };\r\n\r\n  render() {\r\n    const { books } = this.props;\r\n\r\n    return (\r\n      <div className=\"search-books\">\r\n        <div className=\"search-books-bar\">\r\n          <Link className=\"close-search\" to=\"/\">\r\n            Close\r\n          </Link>\r\n          <div className=\"search-books-input-wrapper\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Search by title or author\"\r\n              onChange={event => this.handleSearchBook(event.target.value)}\r\n              onKeyDown={event => {\r\n                if (event.keyCode === 8)\r\n                  this.handleSearchBook(event.target.value);\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"search-books-results\">\r\n          <ol className=\"books-grid\">\r\n            {console.log(books)}\r\n            {//if(books.length > 0){\r\n\r\n            books && books.length > 1 ? (\r\n              books.map((book, index) => (\r\n                <Book\r\n                  book={book}\r\n                  key={index}\r\n                  onUpdate={shelf => {\r\n                    this.update_book(book, shelf);\r\n                  }}\r\n                />\r\n              ))\r\n            ) : (\r\n              <p>no books yet</p>\r\n            )}\r\n          </ol>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default SearchBook;\r\n","import React from \"react\";\r\nimport Book from \"./Book\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass BookShelf extends React.Component {\r\n  static propTypes = {\r\n    books: PropTypes.array.isRequired,\r\n    shelfTitle: PropTypes.string.isRequired,\r\n    moveTo: PropTypes.func.isRequired\r\n  };\r\n  update_book = (book, shelf) => {\r\n    this.props.moveTo(book, shelf);\r\n  };\r\n\r\n  render() {\r\n    const { books } = this.props;\r\n\r\n    return (\r\n      <div className=\"bookshelf\">\r\n        <h2 className=\"bookshelf-title\">{this.props.shelfTitle}</h2>\r\n        <div className=\"bookshelf-books\">\r\n          <ol className=\"books-grid\">\r\n            {books.map((book, index) => (\r\n              <Book\r\n                book={book}\r\n                key={index}\r\n                onUpdate={shelf => {\r\n                  this.update_book(book, shelf);\r\n                }}\r\n              />\r\n            ))}\r\n          </ol>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BookShelf;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport BookShelf from \"./BookShelf\";\r\n//import sortBy from \"sort-by\";\r\n\r\nclass ListBooks extends React.Component {\r\n  static propTypes = {\r\n    books: PropTypes.array.isRequired,\r\n    moveTo: PropTypes.func.isRequired\r\n  };\r\n\r\n  componentDidMount() {}\r\n\r\n\r\n\r\n  render() {\r\n    const { books } = this.props;\r\n    const wantToRead = books.filter(\r\n      shelfBook => shelfBook.shelf === \"wantToRead\"\r\n    );\r\n    const currentlyReading = books.filter(\r\n      shelfBook => shelfBook.shelf === \"currentlyReading\"\r\n    );\r\n    const read = books.filter(shelfBook => shelfBook.shelf === \"read\");\r\n\r\n    return (\r\n      <div className=\"list-books\">\r\n        <div className=\"list-books-title\">\r\n          <h1>MyReads</h1>\r\n        </div>\r\n        <div className=\"list-books-content\">\r\n          <div>\r\n            <BookShelf shelfTitle=\"Currently Reading\" books={currentlyReading} moveTo={this.props.moveTo}/>\r\n            <BookShelf shelfTitle=\"Want to Read\" books={wantToRead} moveTo={this.props.moveTo}/>\r\n            <BookShelf shelfTitle=\"Read\" books={read} moveTo={this.props.moveTo}/>\r\n          </div>\r\n        </div>\r\n        <div className=\"open-search\">\r\n          <Link to=\"/search\">\r\n            <button>Add a book</button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ListBooks;\r\n","import React from \"react\";\nimport * as BooksAPI from \"./BooksAPI\";\nimport \"./App.css\";\nimport SearchBook from \"./SearchBook\";\nimport { Route } from \"react-router-dom\";\nimport escapeRegExp from \"escape-string-regexp\";\n\nimport ListBooks from \"./ListBooks\";\n\nclass BooksApp extends React.Component {\n  state = {\n    books: [],\n    searchBooks: []\n  };\n  componentDidMount() {\n    BooksAPI.getAll().then(books => {\n      this.setState({ books });\n    });\n  }\n\n  clearBooks() {\n    this.setState({ searchBooks: [] });\n  }\n  moveTo = (bookUi, shelfUi, searchBookChoice) => {\n    const { books } = this.state;\n    if (searchBookChoice) {\n      books.push(bookUi);\n    }\n    BooksAPI.update(bookUi, shelfUi).then(books => {\n      console.log(\"ids updated\");\n    });\n    const nextBookState = books.map(book => {\n      if (book.id !== bookUi.id) return book;\n      return {\n        ...book,\n        shelf: shelfUi\n      };\n    });\n    this.setState({ books: nextBookState });\n  };\n\n  searchBooks = query => {\n    if (query.length === \"\") {\n      this.clearBooks();\n    } else {\n      BooksAPI.search(query)\n        .then(records => {\n          if (records.error || records === undefined) {\n            this.clearBooks();\n          } else {\n            const match = new RegExp(escapeRegExp(query), \"i\");\n\n            const searchBooks = records.filter(\n              record => match.test(record.title) || match.test(record.author)\n            );\n\n            this.setState({ searchBooks });\n          }\n        })\n        .catch(err => {\n          this.clearBooks();\n        });\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"app\">\n        <Route\n          path=\"/search\"\n          render={({ history }) => (\n            <SearchBook\n              moveTo={this.moveTo}\n              books={this.state.searchBooks}\n              searchBooks={book => {\n                this.searchBooks(book);\n\n              }}\n            />\n          )}\n        />\n        <Route\n          exact\n          path=\"/\"\n          render={() => (\n            <ListBooks books={this.state.books} moveTo={this.moveTo} />\n          )}\n        />\n      </div>\n    );\n  }\n}\n\nexport default BooksApp;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { HashRouter  } from 'react-router-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<HashRouter><App /></HashRouter>, document.getElementById('root'))\n"],"sourceRoot":""}